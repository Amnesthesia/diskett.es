var App = require('./app');

App.Router.map(function() {
  
  // generated by ember-generate --scaffold
  this.resource('shows');
  this.resource('show', {path: '/shows/:show_id'});
  this.route('edit_show', {path: '/shows/:show_id/edit'});
  this.route('new_show', {path: '/shows/new'});
  // end generated routes

  // This is the login route
  this.route('login');
  // And routes that are inaccessible without logging in:
  this.route('protected');

  // Route for the account section
  this.route('account',{path: '/account'});

  // Route for the section with watched shows
  this.route('watched',{path: '/following'});
  this.route('show',{path: '/following/:show_id'});

  // generated by ember-generate --scaffold
  this.resource('channels');
  this.resource('channel', {path: '/channels/:channel_id'});
  this.route('edit_channel', {path: '/channels/:channel_id/edit'});
  this.route('new_channel', {path: '/channels/new'});
  // end generated routes


  // generated by ember-generate --scaffold
  this.resource('countries');
  this.resource('country', {path: '/countries/:country_id'});
  this.route('edit_country', {path: '/countries/:country_id/edit'});
  this.route('new_country', {path: '/countries/new'});
  // end generated routes


  // generated by ember-generate --scaffold
  this.resource('episodes');
  this.resource('episode', {path: '/episodes/:episode_id'});
  this.route('edit_episode', {path: '/episodes/:episode_id/edit'});
  this.route('new_episode', {path: '/episodes/new'});
  // end generated routes

  this.resource('users');
  this.resource('user', { path: '/user/:user_id'});

});

// Set the base URL
App.Router.reopen({
  rootURL: '/front-end/'
});





// All "protected" routes should require authorization (verify session token)
App.ProtectedRoute = Ember.Route.extend(Ember.SimpleAuth.AuthenticatedRouteMixin, {
  // Authorize request!
  model: function(){
    return new Ember.RSVP.Promise(function(resolve, reject){
      Ember.$.get('/api/data').then(function(response){
        resolve(JSON.stringify(response));
      });
    });
  }
});

// Apply mixins for authentication :)
App.ApplicationRoute = Ember.Route.extend(Ember.SimpleAuth.ApplicationRouteMixin,{
    user: '',
    model: function(){
      // We're working with the users session account, but 
      // the account returns a RSVP.Promise, which means it "promises"
      // to fill up the content "soon". We have to wait for this promise to finish,
      // _then_ return it, otherwise we get an object that isn't set up properly
      // and we can't work with that :(
      return this.get('session.account').then(function(user){
        return user; 
      });
    },
    actions: {
      logSession: function(){
        console.log(session);
      },
      follow: function(show_id){
        if(!this.get('session').isAuthenticated)
          this.transitionTo('login');
        
        console.log("Attempting to follow show with ID "+show_id);
        console.log(this.get('session.account.shows'));

        var user = this.store.find('user',this.get('session.account.id'));
        this.get('session.account.shows').pushObject(this.store.find('show',show_id));
        this.get('session.account').then(function(response){
         response.save();
        });
        // Hide the show
        Ember.$("#"+show_id).hide("slideLeft");
      }
    }
});

App.IndexRoute = Ember.Route.extend({
  redirect: function(){
    // Redirect index to shows
    this.transitionToAnimated('shows',{main: 'slideOverRight'});
  }
});



